<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

    <apikit:config name="system-api-oic-config" raml="system-api-oic.raml" consoleEnabled="false" doc:name="Router"/>
 
    <!-- HTTP Request Params for OIC -->
    <http:request-config name="HTTP_Request_Configuration_OIC" doc:name="HTTP Request Configuration" >
        <http:basic-authentication username="${oic.user}" password="${oic.password}" preemptive="true"/>
    </http:request-config>
    
    <!-- Web Service Configuration for OIC -->
    <ws:consumer-config name="OIC_Web_Service_Consumer" service="TransactionService" port="TransactionServiceSoapHttpPort" serviceAddress="${oic.url}" wsdlLocation="oic-webservice/TransactionService_1.wsdl" doc:name="Web Service Consumer" connectorConfig="HTTP_Request_Configuration_OIC"/>
      
    <configuration doc:name="Configuration">
        <expression-language> 
            <global-functions>
            def toTimestamp(){ 
            	return new java.sql.Timestamp(new java.util.Date().getTime()) 
            }  
          def parseDateAndConvert(string)
            {
               java.text.SimpleDateFormat dateformat =new java.text.SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
               
                java.util.Date toDate = dateformat.parse(string);
                java.text.SimpleDateFormat stringFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
                String dateStr = stringFormat.format(toDate);
                
            	return dateStr;
	        }
			def getCount(skuIdType){
					counter = com.tccrocks.integration.salesorder.GenerateSequenceNumber.getInstance().getCounter(skuIdType);
					if(counter == 0){
						return ""
					} else {
						return "-00" + counter
					}
												
				}
			def parseDateAndConvertTrecs(string)
			{
				java.text.SimpleDateFormat dateformat =new java.text.SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
               
                java.util.Date toDate = dateformat.parse(string);
                java.text.SimpleDateFormat stringFormat = new java.text.SimpleDateFormat("yyyyMMdd");
                String dateStr = stringFormat.format(toDate);
                
            	return dateStr;
			}
			
			def getOrderIdSubString(string) 
	        {
	        	if(!string.contains("_")) {
	        	  return string;
	        	}
	          else 
	           str.substring(0, string.indexOf('_'));
	        }
	        
            </global-functions> 
        </expression-language>
    </configuration>
	
	<secure-property-placeholder:config name="Secure_Property_Placeholder" key="${mulevault.key}" location="classpath:api-oic-${mule.env}.properties,file:///opt/app/esb/app-config/api-oic-override.properties" doc:name="Secure Property Placeholder" ignoreResourceNotFound="true"/>
    
    <flow name="system-api-oic-main">
        <http:listener config-ref="shared-httpListenerConfig" path="/api-oic/*" doc:name="HTTP"/>
        <apikit:router config-ref="system-api-oic-config" doc:name="APIkit Router"/>
        <exception-strategy ref="system-api-oic-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="system-api-oic-console">
        <http:listener config-ref="shared-httpListenerConfig" path="/api-oic/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="system-api-oic-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="post:/salesorder-oic:system-api-oic-config">
        <logger message="Salesorder System API - OIC - Request ::  #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <flow-ref name="atg-oicFlow" doc:name="atg-oicFlow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	OICInput: flowVars.oicParsedRequest,
	OICOutput:payload
}]]></dw:set-payload>

        </dw:transform-message>
        <object-to-string-transformer doc:name="Object to String" mimeType="application/json"/>
        <logger message="Salesorder System API - OIC - Response :: #[payload.replaceAll(&quot;\\r\\n\\t|\\r|\\n|\\t&quot;,&quot;&quot;)]" level="INFO" doc:name="Logger"/>

    </flow>
    <apikit:mapping-exception-strategy name="system-api-oic-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
