<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<!-- Credit check config JDE -->
	
	<ws:consumer-config name="JDE_Check-Customer_Web_Service_Consumer" wsdlLocation="jde-webservice/AccountsReceivableManagerTCC_1.wsdl" service="AccountsReceivableManagerTCCService" port="AccountsReceivableManagerTCCPort" serviceAddress="${jde.credit.check.url}" doc:name="Web Service Consumer" connectorConfig="HTTP_Request_Configuration">
        <ws:security>
            <ws:wss-username-token username="${jde.username}" password="${jde.password}" passwordType="TEXT"/>
        </ws:security>
    </ws:consumer-config>
    
    <http:request-config name="HTTP_Request_Configuration" doc:name="HTTP Request Configuration" responseTimeout="10000" >
        <http:basic-authentication username="${jde.username}" password="${jde.password}"/>
    </http:request-config>
	
	<!-- Customer Creation -->
    
     <ws:consumer-config name="Web_Service_Consumer_Customer" service="${ws.consumer.customermanager.service}" port="${ws.consumer.customermanager.port}" serviceAddress="${ws.consumer.customermanager.serviceaddress}" wsdlLocation="${ws.consumer.customermanager.wsdllocation}" doc:name="Web Service Consumer" connectorConfig="HTTP_Request_Configuration_Customer">
        <ws:security>
            <ws:wss-username-token username="${ws.consumer.username}" password="${ws.consumer.password}" passwordType="TEXT"/>
        </ws:security>
    </ws:consumer-config>
    
    <http:request-config name="HTTP_Request_Configuration_Customer" responseTimeout="${jde.timeout}" doc:name="HTTP Request Configuration"  connectionIdleTimeout="${jde.timeout}" />
    
    
    <!-- SALESORDER to JDE WS CONFIG -->
    
    <ws:consumer-config name="Web_Service_Consumer_Salesorder" service="SalesOrderManagerTCCService" port="SalesOrderManagerTCCPort" serviceAddress="${jde.salesOrder.url}" wsdlLocation="jde-webservice/SalesOrderManagerTCC_1.wsdl" doc:name="Web Service Consumer" connectorConfig="HTTP_Request_Configuration_JDE_WS">
        <ws:security>
            <ws:wss-username-token username="${jde.username}" password="${jde.password}" passwordType="TEXT"/>
        </ws:security>
    </ws:consumer-config>
    <http:request-config name="HTTP_Request_Configuration_JDE_WS" connectionIdleTimeout="${jde.timeout}" doc:name="HTTP Request Configuration" responseTimeout="${jde.timeout}" />
    
    <!-- Active MQ Configuration -->
    
    <jms:activemq-connector name="Active_MQ" username="${queue.jms.username}" password="${queue.jms.password}" brokerURL="${queue.jms.brokerURL}" persistentDelivery="true" validateConnections="true" doc:name="Active MQ">
        <reconnect-forever frequency="10000"/>
    </jms:activemq-connector>
    
    
	<apikit:config name="jdeService-config" raml="jdeService.raml" consoleEnabled="true" doc:name="Router" consolePath="console"/>
    
    <secure-property-placeholder:config name="Secure_Property_Placeholder" key="${mulevault.key}" location="classpath:system-api-jde-${mule.env}.properties,file:///opt/app/esb/app-config/system-api-jde-override.properties" doc:name="Secure Property Placeholder" ignoreResourceNotFound="true"/>
    <flow name="jdeService-main">
        <http:listener config-ref="shared-httpListenerConfig" path="/jde-esb-service/*" doc:name="HTTP"/>
        <apikit:router config-ref="jdeService-config" doc:name="APIkit Router"/>
        <exception-strategy ref="jdeService-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    

    
    <flow name="post:/creditCheckARAccountBalance:jdeService-config">
        <flow-ref name="credit-check-service-implementation" doc:name="credit-check-service-implementation"/>
       
    </flow>
    
    
    
    <flow name="post:/create-update-customer:jdeService-config">
        <logger message="Create - Update - Customer" level="INFO" doc:name="Logger"/>
        <flow-ref name="create-update-customer-serviceimpl" doc:name="create-update-customer-serviceimpl"/>
       
		
    </flow>
   
    <flow name="post:/create-update-salesorder:jdeService-config">
        <logger message="Create - Update - Salesorder" level="INFO" doc:name="Logger"/>
        <flow-ref name="createUpdateSalesorder-serviceimpl" doc:name="createUpdateSalesorder-serviceimpl"/>

        
		
	</flow>

    

    
    <apikit:mapping-exception-strategy name="jdeService-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>

        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    
</mule>
