<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <munit:config name="munit" doc:name="MUnit configuration" mock-connectors="false" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:system-api-jde-app-sync-payload.xml"/>
        <spring:import resource="classpath:system-api-jde-creditcheck-implementation.xml"/>
        <spring:import resource="classpath:system-api-jde-customer-implementation.xml"/>
        <spring:import resource="classpath:system-api-jde-salesorder-implementation.xml"/>
       	<spring:import resource="classpath:system-api-jde.xml"/>
		<spring:import resource="classpath:system-api-jde-retry-mail-implementation.xml"/>
        
    </spring:beans>
    <munit:test name="system-api-jde-test-suite-post:/create-update-customer:jdeService-configTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Web Service Consumer Customer']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('createUpdateCustomer_response.xml').asString()]"/>
        </mock:when>
        <logger message="Munit Started Processing  for Customer :" level="INFO" doc:name="Logger"/>
        <parse-template location="atg-customer-CreateUpdateCustomer-request.json" doc:name="Parse Template"/>
        <logger message="Munit request  for Customer #[payload]" level="DEBUG" doc:name="Logger"/>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <flow-ref name="post:/create-update-customer:jdeService-config" doc:name="post:/create-update-customer:jdeService-config"/>
        <logger message="Munit Response  for Customer #[payload]" level="DEBUG" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---

payload]]></dw:set-payload>
        </dw:transform-message>
        <munit:assert-false message="If OrderId is null or blank" condition="#[flowVars.orderId ==&quot;&quot; ||  flowVars.orderId ==null]" doc:name="Assert False"/>
        <logger message="Munit Process Completed  for Customer " level="INFO" doc:name="Logger"/>
    </munit:test>
</mule>
