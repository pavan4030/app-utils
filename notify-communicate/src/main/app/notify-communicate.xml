<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"	
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">


    <db:template-query name="ESB-APPS-AUDIT-INSERT" doc:name="Template Query">
        <db:parameterized-query><![CDATA[insert into ESB_APPS_AUDIT(ESB_APPS_AUDIT_ID,APP_ID,CREATE_TS)  VALUES(ESB_APPS_AUDIT_SEQ.NEXTVAL,
#[payload.ExecutionMetrics.ApplicationID],#[function:now])]]></db:parameterized-query>
    </db:template-query>
    <db:template-query name="BATCH_AUDIT_INFO_INSERT" doc:name="Template Query">
        <db:parameterized-query><![CDATA[INSERT INTO BATCH_AUDIT_INFO(BATCH_RUN_ID,BATCH_PROCESS_NAME,BATCH_SOURCE_FILE_NAME,TOTAL_RECORDS,
FAILED_RECORDS,SUCCESSFUL_RECORDS,BATCH_START_TS,OVERALL_RESULT)
VALUES(BATCH_RUN_ID_SEQ.NEXTVAL,#[originalPayload.ExecutionMetrics.ApplicationName],
#[originalPayload.ExecutionMetrics.BatchExecutionSummary.SourceFileName],
#[originalPayload.ExecutionMetrics.BatchExecutionSummary.Total],
#[originalPayload.ExecutionMetrics.BatchExecutionSummary.Failed],
#[originalPayload.ExecutionMetrics.BatchExecutionSummary.Successful],
#[originalPayload.ExecutionMetrics.BatchExecutionSummary.StartTs],
#[originalPayload.Status]);]]></db:parameterized-query>
           
    </db:template-query>
    <db:template-query name="Template_Query" doc:name="Template Query">
        <db:parameterized-query><![CDATA[INSERT INTO BATCH_AUDIT_INFO(BATCH_RUN_ID,
                BATCH_PROCESS_NAME,
                BATCH_SOURCE_FILE_NAME,
                OVERALL_RESULT)
VALUES(:seq,:processName,:sourceFile,:overallResult);]]></db:parameterized-query>
        <db:in-param name="processName" defaultValue="proce"/>
        <db:in-param name="sourceFile" defaultValue="sour"/>
        <db:in-param name="overallResult" defaultValue="pass"/>
        <db:in-param name="seq" defaultValue="1002"/>
    </db:template-query>
    
      <flow name="GatherBatchNotifications" doc:description="Gather Batch Execution Metrics from the ESB Notifications Queue. Message has to conform to the Execution Metrics JSON format">
        <jms:inbound-endpoint queue="${notifications.queue}" connector-ref="Active_MQ" doc:name="JMS"/>
        <logger message="Notifications System Persist Message Request #[payload]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="d27ed0e2-7799-496e-b6f9-ad69b07a0a55">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Notifications System Persist Message Processing App #[payload.ExecutionMetrics.ApplicationName]" level="DEBUG" doc:name="Logger"/>




        <set-variable variableName="originalPayload" value="#[payload]" doc:name="Variable" mimeType="application/json"/>


 
      	<ee:multi-transactional action="ALWAYS_BEGIN" doc:name="Transactional">
            <db:insert config-ref="Oracle_Configuration" autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1" doc:name="Database">
                <db:parameterized-query><![CDATA[INSERT INTO BATCH_AUDIT_INFO(BATCH_RUN_ID,
                BATCH_PROCESS_NAME,
                BATCH_SOURCE_FILE_NAME,                 
                 TOTAL_RECORDS,
                 SUCCESSFUL_RECORDS,
                 FAILED_RECORDS,              
                 PARENT_BATCH_RUN_ID,                                  
                BATCH_START_TS,
                 BATCH_END_TS,                 
                OVERALL_RESULT)
VALUES(BATCH_RUN_ID_SEQ.NEXTVAL,
#[flowVars.originalPayload.ExecutionMetrics.ApplicationName],
#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.SourceFileName],
#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.Total],
#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.Successful],
#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.Failed],
#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.ParentBatchRunId],      
#[function:now],
to_timestamp(#[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.EndTs],'yyyy-mm-dd hh24:mi:ss'),
#[flowVars.originalPayload.ExecutionMetrics.Status])]]></db:parameterized-query>




            </db:insert>
            <logger message="Notifications System Persist Message - Database output is #[payload]" level="DEBUG" doc:name="Logger"/>
            <dw:transform-message metadata:id="f05bb066-7e6a-4219-bcc9-db41427d0c11" doc:name="Transform Message">
                <dw:input-payload doc:sample="sample_data\list_map_string_Object.dwl"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload

]]></dw:set-payload>
                <dw:set-variable variableName="batchRunId"><![CDATA[%dw 1.0
%output application/java
---
payload.BATCH_RUN_ID[0]
]]></dw:set-variable>
            </dw:transform-message>
            <object-to-string-transformer mimeType="text/plain" doc:name="Object to String"/>
            <logger message="Notifications System Persist Message -  Sequence is #[flowVars.batchRunId] Transform output is   #[payload]" level="DEBUG" doc:name="Logger"/>
            
  
    <db:insert config-ref="Oracle_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[INSERT INTO ESB_APPS_AUDIT(ESB_APPS_AUDIT_ID,
                APP_ID,
                BATCH_RUN_ID,                
                PARENT_BATCH_RUN_ID,
                PRIORITY,
                SUMMARY_MESSAGE,
                DETAILED_MESSAGE,
                SERVER_HOST,
                SERVER_IP,                
                CREATE_TS,
                UPDATE_TS
                )
VALUES(ESB_APPS_AUDIT_SEQ.NEXTVAL,
#[flowVars.originalPayload.ExecutionMetrics.ApplicationID],
 #[flowVars.batchRunId], 
 #[flowVars.originalPayload.ExecutionMetrics.BatchExecutionSummary.ParentBatchRunId],   
 #[flowVars.originalPayload.ExecutionMetrics.MessagePriority],
#[flowVars.originalPayload.ExecutionMetrics.MessageSummary],
  #[flowVars.originalPayload.ExecutionMetrics.MessageDetails],
  #[flowVars.originalPayload.ExecutionMetrics.ServerInfo.HostName],
   #[flowVars.originalPayload.ExecutionMetrics.ServerInfo.HostIP],
#[function:now],
#[function:now]
)]]></db:parameterized-query>



            </db:insert>
 
            
    <!--             <db:insert config-ref="Oracle_Configuration" transactionalAction="ALWAYS_JOIN" doc:name="Database">
                <db:template-query-ref name="BATCH_AUDIT_INFO_INSERT"/>
            </db:insert>  -->
     </ee:multi-transactional>  
    
        
        <logger message="Notifications System Persist Message completed - database output #[payload]" level="INFO" doc:name="Logger"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
                <logger message="Notifications System Persist Message - Exception in database operation #[payload]" level="INFO" doc:name="Logger"/>
            </catch-exception-strategy>
    </flow>
    <flow name="AggregateNotifications" doc:description="Gather notifications from the database and submit to queue so that communication flow can broadcast it">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="1" timeUnit="HOURS"/>
            <db:select config-ref="Oracle_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[SELECT E.ESB_APPS_AUDIT_ID,E.APP_ID,B.BATCH_RUN_ID,B.PARENT_BATCH_RUN_ID,E.PRIORITY,E.SUMMARY_MESSAGE,
E.DETAILED_MESSAGE,E.CREATE_TS,E.UPDATE_TS, E.SERVER_HOST,E.SERVER_IP,B.BATCH_PROCESS_NAME, B.BATCH_SOURCE_FILE_NAME,b.TOTAL_RECORDS, b.SUCCESSFUL_RECORDS,b.OVERALL_RESULT
from ESB_APPS_AUDIT E,BATCH_AUDIT_INFO B
where e.BATCH_RUN_ID = b.BATCH_RUN_ID and e.create_ts >= SYSDATE - 1/24]]></db:parameterized-query>


            </db:select>

        </poll>
        <logger message="Notifications System Publish Message Triggered " level="INFO" doc:name="Logger"/>
        <dw:transform-message metadata:id="c90cf994-1fa4-4dd4-aa37-1f127af455b3" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	ExecutionMetrics: {
		ApplicationID: payload01.APP_ID as :string,
		ServerInfo: {
			HostName: payload01.SERVER_HOST,
			HostIP: payload01.SERVER_IP
		},
		BatchExecutionSummary: {
			SourceFileName: payload01.BATCH_PROCESS_NAME,
			(BatchRunId: payload01.BATCH_RUN_ID as :string) when payload01.BATCH_RUN_ID != null,
			(Total: payload01.TOTAL_RECORDS as :string) when payload01.TOTAL_RECORDS != null,
			(Successful: payload01.SUCCESSFUL_RECORDS as :string) when payload01.SUCCESSFUL_RECORDS != null,
			(ParentBatchRunId: payload01.PARENT_BATCH_RUN_ID as :string) when payload01.PARENT_BATCH_RUN_ID != null
		},
		Status: payload01.OVERALL_RESULT,
		MessagePriority: payload01.PRIORITY,
		MessageSummary: payload01.SUMMARY_MESSAGE,
		MessageDetails: payload01.DETAILED_MESSAGE
	}
})]]></dw:set-payload>
        </dw:transform-message>

        <collection-splitter doc:name="Collection Splitter"/>
        <object-to-string-transformer mimeType="text/json" doc:name="Object to String"/>
        <logger message="Notifications System Publish Message - Writing message to queue - #[payload]" level="INFO" doc:name="Logger"/>
        <jms:outbound-endpoint queue="${communcations.queue}" connector-ref="Active_MQ" doc:name="JMS"/>

    </flow>
    
    
    
</mule>
